<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources location="/WEB-INF/views/include/" mapping="/include/**"/>
	<resources location="/WEB-INF/views/ckeditor/" mapping="/ckeditor/**"/>
	<resources location="/WEB-INF/views/images/" mapping="/images/**"/>
	<resources location="/WEB-INF/views/css/" mapping="/css/**"/>
	<resources location="/WEB-INF/views/community/" mapping="/community/**"/>
	<resources location="/WEB-INF/views/member/" mapping="/member/**"/>
	<resources location="/WEB-INF/views/project/" mapping="/project/**"/>
<!-- 	<resources location="/WEB-INF/views/admin/" mapping="/admin/**"/>
	<resources location="/WEB-INF/views/maker/" mapping="/maker/**"/>
	<resources location="/WEB-INF/views/myorder/" mapping="/myorder/**"/>
	<resources location="/WEB-INF/views/order/" mapping="/order/**"/>
	<resources location="/WEB-INF/views/reward/" mapping="/reward/**"/>
	<resources location="/WEB-INF/views/user/" mapping="/user/**"/> -->
	<!-- 	views폴더 밑에 폴더 생성시 한줄씨 추가
			<resources location="/WEB-INF/views/images/" mapping="/images/**"/> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="loginIntercepter" class="com.crowd.funding.interceptor.LoginInterceptor" />
	<beans:bean id="loginAfterInterceptor" class="com.crowd.funding.interceptor.LoginAfterInterceptor" />
	<beans:bean id="authInterceptor" class="com.crowd.funding.interceptor.AuthInterceptor" />
	<beans:bean id="keepLoginInterceptor" class="com.crowd.funding.interceptor.KeepLoginInterceptor" />
	
	<interceptors>
		<interceptor>
			<mapping path="/user/loginPOST" />
			<mapping path="/user/navercallback" />
			<beans:ref bean="loginIntercepter" />
		</interceptor>
		<!-- 로그인한 상태일 때, 로그인페이지 or 회원가입 페이지로 이동할 경우 > HOME으로 이동  -->
		<interceptor>
			 <mapping path="/user/login" />
			 <mapping path="/user/join" />
			<beans:ref bean="loginAfterInterceptor" />
		</interceptor>
		<!-- 로그인하지 않은 사용자가 접근하면, login뷰로 이동	-->	
		<interceptor>
			<mapping path="/user/myinfo" />
			<mapping path="/project/check" />
			<mapping path="/project/input" />
			<mapping path="/project/my_project" />
			<beans:ref bean="authInterceptor" />
		</interceptor>
		<!-- 사용자가 접속을 할 경우 자동로그인처리 -->
		<interceptor>
			<mapping path="/**/" />
			<beans:ref bean="keepLoginInterceptor" />
		</interceptor>
	</interceptors>
	
	<context:component-scan base-package="com.crowd.funding" />
	
	<!-- 파일 업로드 -->
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<beans:property value="10485760" name="maxUploadSize"/>
	</beans:bean>
	<beans:bean class="java.lang.String" id="uploadPath">
		<beans:constructor-arg value="C:/upload"/>	<!-- value값에 파일업로드시 저장할 폴더 경로 지정 -->
	</beans:bean>

	<!-- oauth2 login -->
	<beans:bean id="naverClientID" class="java.lang.String">
		<beans:constructor-arg value="1ZDfw_aW8UMRLktwhsAX" />
	</beans:bean>
	<beans:bean id="naverClientSecret" class="java.lang.String">
		<beans:constructor-arg value="ruu7M2wA_V" />
	</beans:bean>
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8080/funding/user/navercallback" />
	</beans:bean>
	<beans:bean id="naverSns" class="com.crowd.funding.member.SNSvalue">
		<beans:constructor-arg value="naver"/>
		<beans:constructor-arg ref="naverClientID" />
		<beans:constructor-arg ref="naverClientSecret" />
		<beans:constructor-arg ref="naverRedirectUrl" />
	</beans:bean>
	
</beans:beans>
